name: 'CI'

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
  # This workflow is callable by other workflows
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-lint-${{ env.cache-name }}-
      - run: npm ci
      - run: npm install -g solhint
      - run: solhint contracts/**/*.sol

  tests_full:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-unit-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-test-unit-${{ env.cache-name }}-
      - run: npm ci
      - name: Run Hardhat
        run: |
          npx hardhat node &
      - name: Compile contracts
        run: |
          npx hardhat compile --force
      - run: npm run test:full:cover
      - name: Delete dbg files
        run: find ./artifacts/* -name "*.dbg.json" -type f -delete
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/

  coverage:
    runs-on: ubuntu-latest
    needs: [tests_full]
    if: ${{ success() && github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage/
      - uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        if: "${{ env.CC_TEST_REPORTER_ID != '' }}"
        with:
          coverageLocations: |
            ${{ github.workspace }}/coverage/lcov.info:lcov

  publish-npm:
    needs: [lint, tests_full]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, tests_full]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Replace `.` with `_` in directory names
      run: |
        find artifacts -depth -type d -name '*.sol' -execdir bash -c 'mv -- "$1" "${1//.sol/_sol}"' bash {} \;
    - name: Create __init__.py files
      run: |
        find artifacts -type d -exec touch '{}'/__init__.py ';'
        find addresses -type d -exec touch '{}'/__init__.py ';'
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}